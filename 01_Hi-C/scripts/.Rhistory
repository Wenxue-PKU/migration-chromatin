colData = groups,
design = ~ condition)
dds
keep <- rowSums(counts(dds)) >= 10
dds <- dds[keep,]
dds$condition <- relevel(dds$condition, ref = "HL60")
dds <- DESeq(dds)
res <- results(dds)
res <- results(dds)
res <- data.frame(res)
ggplot(res[is.na(res$padj)==FALSE,], aes(log(baseMean), log2FoldChange, colour=padj<0.05)) + geom_point()
vsd <- vst(dds, blind=FALSE)
sampleDists <- dist(t(assay(vsd)))
sampleDistMatrix <- as.matrix(sampleDists)
rownames(sampleDistMatrix) <- paste(vsd$condition, sep="-")
colnames(sampleDistMatrix) <- NULL
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pheatmap(sampleDistMatrix,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
col=colors)
plotPCA(vsd, intgroup=c("condition"))
library(tidyverse)
hl60_all <- read.csv("HL60_TNF_all.csv")
atra_all <- read.csv("ATRA_TNF_all.csv")
atra_sig <- read.csv("ATRA_TNF_sig.csv")
h <- paste(colnames(hl60_all), "h",sep="_")
a <- paste(colnames(atra_all), "a",sep="_")
colnames(hl60_all) <- h
colnames(atra_all) <- a
all <- hl60_all %>%
full_join(atra_all, by=c("gene_h"="gene_a"))
all_sig <- all %>%
mutate(sig_h=ifelse(padj_h<0.05,TRUE,FALSE)) %>%
mutate(sig_a=ifelse(padj_a<0.05,TRUE,FALSE)) %>%
na.omit()
venrbl <- NULL
venrbl$hl60 <- as.character(hl60_sig$ens_gene)
venrbl$atra <- as.character(atra_sig$ens_gene)
str(venrbl)
plot(Vmig,doWeights=FALSE, Faces = FALSE, DarkMatter = FALSE))
plot(Vmig,doWeights=FALSE, Faces = FALSE, DarkMatter = FALSE)
Vmig <- Venn(venrbl)
library(Vennerable)
library(extrafont)
plot(Vmig,doWeights=FALSE, Faces = FALSE, DarkMatter = FALSE)
Vmig
plot(Vmig)
a_h <- all[all$padj_a<0.05 & all$padj_h<0.05,]
glimpse(a_h)
a_and_h <- all[all$padj_a<0.05 & all$padj_h<0.05,]
mod <- lm(log2FoldChange_a~log2FoldChange_h, data=a_and_h)
mod
summary(mod)
ggplot(a_and_h, aes(log2FoldChange_h,log2FoldChange_a)) + geom_point()
a_AND_h <- all[all$padj_a<0.05 & all$padj_h<0.05,]
mod <- lm(log2FoldChange_a~log2FoldChange_h, data=a_AND_h)
h_NOT_a <- all[all$padj_a>0.05 & all$padj_h<0.05,]
plot(Vmig)
rm(a_and_h)
a_AND_h <- all[all$padj_a<0.05 & all$padj_h<0.05,]
rm(a_h)
a_AND_h <- all[(all$padj_a<0.05 & all$padj_h<0.05),]
h_NOT_a <- all[all$padj_a>0.05 & all$padj_h<0.05,]
venrbl <- NULL
venrbl$hl60 <- as.character(hl60_sig$ens_gene)
venrbl$atra <- as.character(atra_sig$ens_gene)
str(venrbl)
V_TNF <- Venn(venrbl)
V_TNF
plot(Vmig)
V_TNF
View(a_AND_h)
all <- hl60_all %>%
full_join(atra_all, by=c("ens_gene_h"="ens_gene_a"))
all_sig <- all %>%
mutate(sig_h=ifelse(padj_h<0.05,TRUE,FALSE)) %>%
mutate(sig_a=ifelse(padj_a<0.05,TRUE,FALSE)) %>%
na.omit()
a_AND_h <- all[all$sig_a==TRUE & all$sig_h==TRUE,]
mod <- lm(log2FoldChange_a~log2FoldChange_h, data=a_AND_h)
a_AND_h <- all[all$sig_a==TRUE & all$sig_h==TRUE,]
mod <- lm(log2FoldChange_a~log2FoldChange_h, data=a_AND_h)
a_AND_h <- all[all$padj_a<0.05 & all$padj_h<0.05,]
mod <- lm(log2FoldChange_a~log2FoldChange_h, data=a_AND_h)
summary(mod)
ggplot(a_AND_h, aes(log2FoldChange_h,log2FoldChange_a)) + geom_point() + geom_abline(slope=1.14600, intercept=0.11991)
mod <- lm(log2FoldChange_a~log2FoldChange_h, data=a_AND_h)
summary(mod)
ggplot(a_AND_h, aes(log2FoldChange_h,log2FoldChange_a)) + geom_point() + geom_abline(slope=1.14600, intercept=0.11991)
mod <- lm(log2FoldChange_a~log2FoldChange_h, data=a_NOT_h)
h_NOT_a <- all[all$padj_a>0.05 & all$padj_h<0.05,]
mod <- lm(log2FoldChange_a~log2FoldChange_h, data=a_NOT_h)
mod <- lm(log2FoldChange_a~log2FoldChange_h, data=h_NOT_a)
summary(mod)
ggplot(a_and_h, aes(log2FoldChange_h,log2FoldChange_a)) + geom_point()
ggplot(a_NOT_h, aes(log2FoldChange_h,log2FoldChange_a)) + geom_point()
ggplot(h_NOT_a, aes(log2FoldChange_h,log2FoldChange_a)) + geom_point()
ggformat <- theme_classic(base_family = "Arial") + theme(text = element_text(size = 20))
ggplot(a_AND_h, aes(log2FoldChange_h,log2FoldChange_a)) + geom_point() + geom_abline(slope=1.14600, intercept=0.11991) + ggformat
ggplot(h_NOT_a, aes(log2FoldChange_h,log2FoldChange_a)) + geom_point() + ggformat
summary(mod)
a_NOT_h <- all[all$padj_h>0.05 & all$padj_a<0.05,]
mod <- lm(log2FoldChange_a~log2FoldChange_h, data=a_NOT_h)
summary(mod)
ggplot(a_NOT_h, aes(log2FoldChange_h,log2FoldChange_a)) + geom_point()
a_AND_h_opp <- all[(all$padj_a<0.05 & all$padj_h<0.05 & ((log2FoldChange_a<0 & log2FoldChange_h>0) | (log2FoldChange_h<0 & log2FoldChange_a>0)),]
a_AND_h_opp <- all[all$padj_a<0.05 & all$padj_h<0.05 & ((log2FoldChange_a<0 & log2FoldChange_h>0) | (log2FoldChange_h<0 & log2FoldChange_a>0)),]
a_AND_h_opp <- all[all$padj_a<0.05 & all$padj_h<0.05 & ((all$log2FoldChange_a<0 & all$log2FoldChange_h>0) | (all$log2FoldChange_h<0 & all$log2FoldChange_a>0)),]
mod <- lm(log2FoldChange_a~log2FoldChange_h, data=a_AND_h_opp)
summary(mod)
ggplot(a_AND_h_opp, aes(log2FoldChange_h,log2FoldChange_a)) + geom_point()
summary(mod)
ggplot(a_AND_h_opp, aes(log2FoldChange_h,log2FoldChange_a)) + geom_point() + geom_abline(slope=-0.72591, intercept=0.24527) + ggformat
ggplot(a_NOT_h, aes(log2FoldChange_h,log2FoldChange_a)) + geom_point() + ggformat
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(Vennerable)
library(extrafont)
ggformat <- theme_classic(base_family = "Arial") + theme(text = element_text(size = 20))
table(hl60_all$ens_gene_h %in% atra_all$ens_gene_a)
hl60_all <- read.csv("HL60_TNF_all.csv")
atra_sig <- read.csv("ATRA_TNF_sig.csv")
table(hl60_all$ens_gene %in% atra_all$ens_gene)
table(atra_all$ens_gene %in% hl60_all$ens_gene)
table(is.na(all_sig$ens_gene_h))
table(is.na(all$ens_gene_h))
universe <- all$ens_gene_h
write.csv(universe, "gene_universe_tnf.csv", row.names = FALSE)
migration_genes <- read.csv("gene_universe_tnf.csv")
g2o_full <- readRDS('../biomart_gene_ontology.rds')
g2o <- g2o_full %>%
filter(go_id != "") %>%
filter(ensembl_gene_id %in% migration_genes$ens_gene_h)
geneID2GO <- by(g2o$go_id,
g2o$ensembl_gene_id,
function(x) as.character(x))
geneUniverse <- names(geneID2GO)
find_GO <- function(genes, ontology="BP",out){
List <- factor(as.integer(geneUniverse %in% genes))
names(List) <- geneUniverse
GO <- new("topGOdata", description="", ontology=ontology, allGenes=List,  annot = annFUN.gene2GO, gene2GO = geneID2GO)
allGO = usedGO(object = GO)
Fisher.w01 <- runTest(GO, algorithm="weight01", statistic="fisher")
Res <- GenTable(GO, weight01Fisher = Fisher.w01, orderBy = "weight01Fisher", ranksOf = "weight01Fisher", topNodes = length(allGO))
sigRes <- Res %>%
mutate(weight01Fisher=as.numeric(weight01Fisher)) %>%
filter(weight01Fisher<1) %>%
filter(Significant>1) %>%
mutate(qval=p.adjust(weight01Fisher, method="BH")) %>%
filter(qval<0.1)
write.csv(sigRes, out)
}
write.csv(all, "HL60_TNF_all.csv")
raw_counts <- dat[,c(12:17)]
groups <- data.frame(factor(c("HL60","HL60","HL60","TNF","TNF","TNF")))
rownames(groups) <- colnames(raw_counts)
colnames(groups) <- "condition"
dds <- DESeqDataSetFromMatrix(countData = raw_counts,
colData = groups,
design = ~ condition)
dds
keep <- rowSums(counts(dds)) >= 10
dds <- dds[keep,]
dds$condition <- relevel(dds$condition, ref = "HL60")
dds <- DESeq(dds)
res <- results(dds)
res <- data.frame(res)
ext_name <- readRDS('../biomart_gene_ontology.rds')
ext_name <- ext_name %>%
dplyr::select(ensembl_gene_id, external_gene_name) %>%
distinct()
res$gene <- rownames(res)
hl60 <- res %>%
na.omit() %>%
mutate(ens_gene=gsub("\\..*$","",gene)) %>%
left_join(ext_name, by=c("ens_gene"="ensembl_gene_id"))
hl60_sig <- hl60 %>%
filter(padj<0.05)
write.csv(hl60, 'HL60_TNF_all.csv')
write.csv(hl60_sig, 'HL60_TNF_sig.csv')
write.csv(all, "HL60_ATRA_TNF_all.csv")
all <- read.csv("HL60_ATRA_TNF_all.csv")
a_AND_h_same <- all[all$padj_a<0.05 & all$padj_h<0.05 & ((all$log2FoldChange_a>0 & all$log2FoldChange_h>0) | (all$log2FoldChange_h<0 & all$log2FoldChange_a<0)),]
Interest <- as.character(a_AND_h_same$ens_gene_h)
find_GO(genes=Interest, out='GO_BP_a_and_h_same.csv')
Interest <- as.character(a_AND_h_same$ens_gene_h)
find_GO(genes=Interest, out='GO_BP_a_and_h_same.csv')
library(topGO)
find_GO(genes=Interest, out='GO_BP_a_and_h_same.csv')
a_AND_h_same <- all[all$padj_a<0.05 & all$padj_h<0.05 & ((all$log2FoldChange_a>0 & all$log2FoldChange_h>0) | (all$log2FoldChange_h<0 & all$log2FoldChange_a<0)),]
Interest <- as.character(a_AND_h_same$ens_gene_h)
find_GO(genes=Interest, out='GO_BP_a_and_h_same.csv')
genes <- as.character(a_AND_h_same$ens_gene_h)
List <- factor(as.integer(geneUniverse %in% genes))
tnf_genes <- read.csv("gene_universe_tnf.csv")
g2o_full <- readRDS('../biomart_gene_ontology.rds')
g2o <- g2o_full %>%
filter(go_id != "") %>%
filter(ensembl_gene_id %in% tnf_genes$ens_gene_h)
glimpse(universe)
glimpse(tnf_genes)
g2o <- g2o_full %>%
filter(go_id != "") %>%
filter(ensembl_gene_id %in% tnf_genes$x)
geneID2GO <- by(g2o$go_id,
g2o$ensembl_gene_id,
function(x) as.character(x))
geneUniverse <- names(geneID2GO)
Interest <- as.character(a_AND_h_same$ens_gene_h)
find_GO(genes=Interest, out='GO_BP_a_and_h_same.csv')
sigRes <- Res %>%
mutate(weight01Fisher=as.numeric(weight01Fisher)) %>%
filter(weight01Fisher<1) %>%
filter(Significant>1) %>%
mutate(qval=p.adjust(weight01Fisher, method="BH")) %>%
filter(qval<0.05)
a_AND_h_same <- all[all$padj_a<0.05 & all$padj_h<0.05 & ((all$log2FoldChange_a>0 & all$log2FoldChange_h>0) | (all$log2FoldChange_h<0 & all$log2FoldChange_a<0)),]
Interest <- as.character(a_AND_h_same$ens_gene_h)
find_GO(genes=Interest, out='GO_BP_a_and_h_same.csv')
a_AND_h_opp <- all[all$padj_a<0.05 & all$padj_h<0.05 & ((all$log2FoldChange_a<0 & all$log2FoldChange_h>0) | (all$log2FoldChange_h>0 & all$log2FoldChange_a<0)),]
Interest <- as.character(a_AND_h_opp$ens_gene_h)
find_GO(genes=Interest, out='GO_BP_a_and_h_opp.csv')
h_NOT_a <- all[all$padj_a>0.05 & all$padj_h<0.05,]
Interest <- as.character(h_NOT_a$ens_gene_h)
find_GO(genes=Interest, out='GO_BP_h_not_a.csv')
a_NOT_h <- all[all$padj_h>0.05 & all$padj_a<0.05,]
Interest <- as.character(a_AND_h_same$ens_gene_h)
find_GO(genes=Interest, out='GO_BP_a_and_h_opp.csv')
a_NOT_h <- all[all$padj_h>0.05 & all$padj_a<0.05,]
Interest <- as.character(a_AND_h_same$ens_gene_h)
find_GO(genes=Interest, out='GO_BP_a_not_h.csv')
a_AND_h_opp <- all[all$padj_a<0.05 & all$padj_h<0.05 & ((all$log2FoldChange_a<0 & all$log2FoldChange_h>0) | (all$log2FoldChange_h>0 & all$log2FoldChange_a<0)),]
Interest <- as.character(a_AND_h_opp$ens_gene_h)
find_GO(genes=Interest, out='GO_BP_a_and_h_opp.csv')
plot(V_TNF)
find_GO(genes=Interest, ontology="MF", out='GO_MF_a_and_h_opp.csv')
find_GO(genes=Interest, ontology="CC", out='GO_CC_a_and_h_opp.csv')
View(a_AND_h_opp)
a_AND_h_opp <- all[all$padj_a<0.05 & all$padj_h<0.05 & ((all$log2FoldChange_a<0 & all$log2FoldChange_h>0) | (all$log2FoldChange_h>0 & all$log2FoldChange_a<0)),]
Interest <- as.character(a_AND_h_opp$ens_gene_h)
?as.character
Interest <- as.character(na.exclude(h_NOT_a$ens_gene_h))
Interest <- as.character(na.exclude(a_AND_h_opp$ens_gene_h))
find_GO(genes=Interest, ontology="MF", out='GO_MF_a_and_h_opp.csv')
table(is.na(Interest))
a_AND_h_opp <- na.omit(a_AND_h_opp)
a_AND_h_same <- na.omit(a_AND_h_same)
h_NOT_a <- na.omit(h_NOT_a)
View(a_AND_h_opp)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(Vennerable)
library(extrafont)
library(topGO)
ggformat <- theme_classic(base_family = "Arial") + theme(text = element_text(size = 20))
hl60_all <- read.csv("HL60_TNF_all.csv")
hl60_sig <- read.csv("HL60_TNF_sig.csv")
atra_all <- read.csv("ATRA_TNF_all.csv")
atra_sig <- read.csv("ATRA_TNF_sig.csv")
all <- read.csv("HL60_ATRA_TNF_all.csv")
tnf_genes <- read.csv("gene_universe_tnf.csv")
g2o_full <- readRDS('../biomart_gene_ontology.rds')
g2o <- g2o_full %>%
filter(go_id != "") %>%
filter(ensembl_gene_id %in% tnf_genes$x)
geneID2GO <- by(g2o$go_id,
g2o$ensembl_gene_id,
function(x) as.character(x))
geneUniverse <- names(geneID2GO)
find_GO <- function(genes, ontology="BP",out){
List <- factor(as.integer(geneUniverse %in% genes))
names(List) <- geneUniverse
GO <- new("topGOdata", description="", ontology=ontology, allGenes=List,  annot = annFUN.gene2GO, gene2GO = geneID2GO)
allGO = usedGO(object = GO)
Fisher.w01 <- runTest(GO, algorithm="weight01", statistic="fisher")
Res <- GenTable(GO, weight01Fisher = Fisher.w01, orderBy = "weight01Fisher", ranksOf = "weight01Fisher", topNodes = length(allGO))
sigRes <- Res %>%
mutate(weight01Fisher=as.numeric(weight01Fisher)) %>%
filter(weight01Fisher<1) %>%
filter(Significant>1) %>%
mutate(qval=p.adjust(weight01Fisher, method="BH")) %>%
filter(qval<0.05)
write.csv(sigRes, out)
}
a_AND_h_same <- all[all$padj_a<0.05 & all$padj_h<0.05 & ((all$log2FoldChange_a>0 & all$log2FoldChange_h>0) | (all$log2FoldChange_h<0 & all$log2FoldChange_a<0)),]
a_AND_h_same <- na.omit(a_AND_h_same)
Interest <- as.character(a_AND_h_same$ens_gene_h)
find_GO(genes=Interest, out='GO_BP_a_and_h_same.csv')
a_AND_h_opp <- all[all$padj_a<0.05 & all$padj_h<0.05 & ((all$log2FoldChange_a<0 & all$log2FoldChange_h>0) | (all$log2FoldChange_h>0 & all$log2FoldChange_a<0)),]
a_AND_h_opp <- na.omit(a_AND_h_opp)
Interest <- as.character(na.exclude(a_AND_h_opp$ens_gene_h))
find_GO(genes=Interest, out='GO_BP_a_and_h_opp.csv')
find_GO(genes=Interest, ontology="MF", out='GO_MF_a_and_h_opp.csv')
find_GO(genes=Interest, ontology="CC", out='GO_CC_a_and_h_opp.csv')
h_NOT_a <- all[all$padj_a>0.05 & all$padj_h<0.05,]
h_NOT_a <- na.omit(h_NOT_a)
Interest <- as.character(h_NOT_a$ens_gene_h)
find_GO(genes=Interest, out='GO_BP_h_not_a.csv')
a_NOT_h <- all[all$padj_h>0.05 & all$padj_a<0.05,]
a_NOT_h <- na.omit(h_NOT_a)
Interest <- as.character(a_AND_h_same$ens_gene_h)
find_GO(genes=Interest, out='GO_BP_a_not_h.csv')
a_AND_h_same <- all[all$padj_a<0.05 & all$padj_h<0.05 & ((all$log2FoldChange_a>2 & all$log2FoldChange_h>2) | (all$log2FoldChange_h<-2 & all$log2FoldChange_a<-2)),]
a_AND_h_same <- all[all$padj_a<0.05 & all$padj_h<0.05 & ((all$log2FoldChange_a>2 & all$log2FoldChange_h>2) | (all$log2FoldChange_h<(-2) & all$log2FoldChange_a<(-2))),]
a_AND_h_same <- na.omit(a_AND_h_same)
Interest <- as.character(a_AND_h_same$ens_gene_h)
find_GO(genes=Interest, out='GO_BP_a_and_h_same.csv')
a_AND_h_opp <- all[all$padj_a<0.05 & all$padj_h<0.05 & ((all$log2FoldChange_a<(-2) & all$log2FoldChange_h>2) | (all$log2FoldChange_h>2 & all$log2FoldChange_a<(-2))),]
a_AND_h_opp <- na.omit(a_AND_h_opp)
Interest <- as.character(a_AND_h_opp$ens_gene_h)
find_GO(genes=Interest, out='GO_BP_a_and_h_opp.csv')
a_AND_h_opp <- all[all$padj_a<0.05 & all$padj_h<0.05 & ((all$log2FoldChange_a<(-1) & all$log2FoldChange_h>1) | (all$log2FoldChange_h>1 & all$log2FoldChange_a<(-1))),]
a_AND_h_opp <- na.omit(a_AND_h_opp)
Interest <- as.character(a_AND_h_opp$ens_gene_h)
find_GO(genes=Interest, out='GO_BP_a_and_h_opp.csv')
find_GO(genes=Interest, out='GO_BP_a_and_h_opp.csv')
find_GO(genes=Interest, ontology="MF", out='GO_MF_a_and_h_opp.csv')
find_GO(genes=Interest, ontology="CC", out='GO_CC_a_and_h_opp.csv')
h_NOT_a <- all[all$padj_a>0.05 & all$padj_h<0.05 & abs(all$padj_h)>2,]
h_NOT_a <- na.omit(h_NOT_a)
Interest <- as.character(h_NOT_a$ens_gene_h)
find_GO(genes=Interest, out='GO_BP_h_not_a.csv')
a_NOT_h <- all[all$padj_h>0.05 & all$padj_a<0.05 & abs(all$padj_a)>2,]
a_NOT_h <- na.omit(h_NOT_a)
Interest <- as.character(a_AND_h_same$ens_gene_h)
find_GO(genes=Interest, out='GO_BP_a_not_h.csv')
h_NOT_a <- all[all$padj_a>0.05 & all$padj_h<0.05 & abs(all$padj_h)>1,]
h_NOT_a <- na.omit(h_NOT_a)
Interest <- as.character(h_NOT_a$ens_gene_h)
find_GO(genes=Interest, out='GO_BP_h_not_a.csv')
a_NOT_h <- all[all$padj_h>0.05 & all$padj_a<0.05 & abs(all$log2FoldChange_h)>2,]
a_NOT_h <- na.omit(h_NOT_a)
Interest <- as.character(a_not_h$ens_gene_h)
h_NOT_a <- all[all$padj_a>0.05 & all$padj_h<0.05 & abs(all$log2FoldChange_h)>2,]
h_NOT_a <- na.omit(h_NOT_a)
Interest <- as.character(h_NOT_a$ens_gene_h)
find_GO(genes=Interest, out='GO_BP_h_not_a.csv')
View(h_NOT_a)
a_NOT_h <- all[all$padj_h>0.05 & all$padj_a<0.05 & abs(all$log2FoldChange_a)>2,]
a_NOT_h <- na.omit(a_NOT_h)
Interest <- as.character(a_not_h$ens_gene_h)
a_NOT_h <- all[all$padj_h>0.05 & all$padj_a<0.05 & abs(all$log2FoldChange_a)>2,]
a_NOT_h <- na.omit(a_NOT_h)
Interest <- as.character(a_not_h$ens_gene_h)
Interest <- as.character(a_NOT_h$ens_gene_h)
find_GO(genes=Interest, out='GO_BP_a_not_h.csv')
View(a_NOT_h)
find_GO <- function(genes, ontology="BP",out){
List <- factor(as.integer(geneUniverse %in% genes))
names(List) <- geneUniverse
GO <- new("topGOdata", description="", ontology=ontology, allGenes=List,  annot = annFUN.gene2GO, gene2GO = geneID2GO)
allGO = usedGO(object = GO)
Fisher.w01 <- runTest(GO, algorithm="weight01", statistic="fisher")
Res <- GenTable(GO, weight01Fisher = Fisher.w01, orderBy = "weight01Fisher", ranksOf = "weight01Fisher", topNodes = length(allGO))
sigRes <- Res %>%
mutate(weight01Fisher=as.numeric(weight01Fisher)) %>%
filter(weight01Fisher<1) %>%
filter(Significant>1) %>%
mutate(qval=p.adjust(weight01Fisher, method="BH")) %>%
filter(qval<0.1)
write.csv(sigRes, out)
}
a_AND_h_opp <- all[all$padj_a<0.05 & all$padj_h<0.05 & ((all$log2FoldChange_a<(-1) & all$log2FoldChange_h>1) | (all$log2FoldChange_h>1 & all$log2FoldChange_a<(-1))),]
a_AND_h_opp <- na.omit(a_AND_h_opp)
View(a_AND_h_opp)
h_NOT_a <- all[all$padj_a>0.05 & all$padj_h<0.05 & abs(all$log2FoldChange_h)>2,]
h_NOT_a <- na.omit(h_NOT_a)
Interest <- as.character(h_NOT_a$ens_gene_h)
find_GO(genes=Interest, out='GO_BP_h_not_a.csv')
a_NOT_h <- all[all$padj_h>0.05 & all$padj_a<0.05 & abs(all$log2FoldChange_a)>2,]
a_NOT_h <- na.omit(a_NOT_h)
Interest <- as.character(a_NOT_h$ens_gene_h)
find_GO(genes=Interest, out='GO_BP_a_not_h.csv')
raw_counts <- dat[,c(6:17)]
groups <- data.frame(factor(c("ATRA","ATRA","ATRA","A_TNF","A_TNF","A_TNF","HL60","HL60","HL60","TNF","TNF","TNF")))
rownames(groups) <- colnames(raw_counts)
colnames(groups) <- "condition"
dds <- DESeqDataSetFromMatrix(countData = raw_counts,
colData = groups,
design = ~ condition)
dds
keep <- rowSums(counts(dds)) >= 10
dds <- dds[keep,]
dds$condition <- relevel(dds$condition, ref = "HL60")
dds <- DESeq(dds)
res <- results(dds)
res <- data.frame(res)
count <- data.frame(counts(dds))
count$gene <- rownames(count)
count <- count %>%
filter(gene %in% hl60_sig$gene)
rownames(count) <- count$gene
View(count)
count <- as.matrix(count[,1:12])
count_heat <- apply(count, 2, function(x) x/sum(x))
count_heat <- apply(count_heat, 1, function(x) rescale(x))
count_heat <- t(count_heat)
heatmap.2(count_heat,Colv=FALSE,dendrogram="row", trace="none", col=topo.colors(50))
colnames(count)
col.order <- c("HL60CTRL1.sort.bam", "HL60CTRL2.sort.bam", "HL60CTRL3.sort.bam","HL60NTF1.sort.bam", "HL60NTF2.sort.bam", "HL60NTF3.sort.bam","ATRACTRL1.sort.bam",  "ATRACTRL2.sort.bam",  "ATRACTRL3.sort.bam","ATRATNF1.sort.bam","ATRATNF2.sort.bam","ATRATNF3.sort.bam")
count <- count[,col.order]
colnames(count) <- c("HL60","HL60","HL60","TNF","TNF","TNF","ATRA","ATRA","ATRA","A_TNF","A_TNF","A_TNF")
count_heat <- apply(count, 2, function(x) x/sum(x))
count_heat <- apply(count_heat, 1, function(x) rescale(x))
count_heat <- t(count_heat)
heatmap.2(count_heat,Colv=FALSE,dendrogram="row", trace="none", col=topo.colors(50))
count <- count %>%
filter(gene %in% atra_sig$gene)
count <- data.frame(counts(dds))
count$gene <- rownames(count)
count <- count %>%
filter(gene %in% atra_sig$gene)
rownames(count) <- count$gene
count <- as.matrix(count[,1:12])
col.order <- c("HL60CTRL1.sort.bam", "HL60CTRL2.sort.bam", "HL60CTRL3.sort.bam","HL60NTF1.sort.bam", "HL60NTF2.sort.bam", "HL60NTF3.sort.bam","ATRACTRL1.sort.bam",  "ATRACTRL2.sort.bam",  "ATRACTRL3.sort.bam","ATRATNF1.sort.bam","ATRATNF2.sort.bam","ATRATNF3.sort.bam")
count <- count[,col.order]
colnames(count) <- c("HL60","HL60","HL60","TNF","TNF","TNF","ATRA","ATRA","ATRA","A_TNF","A_TNF","A_TNF")
count_heat <- apply(count, 2, function(x) x/sum(x))
count_heat <- apply(count_heat, 1, function(x) rescale(x))
count_heat <- t(count_heat)
heatmap.2(count_heat,Colv=FALSE,dendrogram="row", trace="none", col=topo.colors(50))
raw_counts <- dat[,c(6:8,12:14)]
glimpse(raw_counts)
groups <- data.frame(factor(c("HL60","HL60","HL60","ATRA","ATRA","ATRA")))
rownames(groups) <- colnames(raw_counts)
colnames(groups) <- "condition"
dds <- DESeqDataSetFromMatrix(countData = raw_counts,
colData = groups,
design = ~ condition)
dds
keep <- rowSums(counts(dds)) >= 10
dds <- dds[keep,]
dds$condition <- relevel(dds$condition, ref = "HL60")
dds <- DESeq(dds)
dds <- DESeq(dds)
res <- results(dds)
res <- data.frame(res)
ggplot(res[is.na(res$padj)==FALSE,], aes(log(baseMean), log2FoldChange, colour=padj<0.05)) + geom_point()
vsd <- vst(dds, blind=FALSE)
meanSdPlot(assay(vsd))
sampleDists <- dist(t(assay(vsd)))
sampleDistMatrix <- as.matrix(sampleDists)
rownames(sampleDistMatrix) <- paste(vsd$condition, sep="-")
colnames(sampleDistMatrix) <- NULL
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pheatmap(sampleDistMatrix,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
col=colors)
plotPCA(vsd, intgroup=c("condition"))
ext_name <- readRDS('../biomart_gene_ontology.rds')
res$gene <- rownames(res)
diff <- res %>%
na.omit() %>%
mutate(ens_gene=gsub("\\..*$","",gene)) %>%
left_join(ext_name, by=c("ens_gene"="ensembl_gene_id"))
diff_sig <- diff %>%
filter(padj<0.05)
write.csv(diff, 'diff_all.csv')
write.csv(diff_sig, 'diff_sig.csv')
diff_all <- read.csv("diff_all.csv")
diff_sig <- read.csv("diff_sig.csv")
d <- paste(colnames(diff_all), "d",sep="_")
colnames(diff_all) <- d
h <- paste(colnames(hl60_all), "h",sep="_")
a <- paste(colnames(atra_all), "a",sep="_")
d <- paste(colnames(diff_all), "d",sep="_")
colnames(hl60_all) <- h
colnames(atra_all) <- a
colnames(diff_all) <- d
all <- hl60_all %>%
full_join(atra_all, by=c("ens_gene_h"="ens_gene_a")) %>%
full_join(diff_all, by=c("ens_gene_h"="ens_gene_d"))
glimpse(diff_all)
diff_all <- read.csv("diff_all.csv")
d <- paste(colnames(diff_all), "d",sep="_")
colnames(diff_all) <- d
all <- hl60_all %>%
full_join(atra_all, by=c("ens_gene_h"="ens_gene_a")) %>%
full_join(diff_all, by=c("ens_gene_h"="ens_gene_d"))
all_sig <- all %>%
mutate(sig_h=ifelse(padj_h<0.05,TRUE,FALSE)) %>%
mutate(sig_a=ifelse(padj_a<0.05,TRUE,FALSE)) %>%
mutate(sig_d=ifelse(padj_d<0.05,TRUE,FALSE)) %>%
na.omit()
write.csv(all, "HL60_ATRA_TNF_all.csv")
write.csv(all, "HL60_ATRA_TNF_all.csv")
universe <- all$ens_gene_h
write.csv(universe, "gene_universe_tnf.csv", row.names = FALSE)
venrbl$diff <- as.character(diff_sig$ens_gene)
str(venrbl)
V_TNF <- Venn(venrbl)
V_TNF
plot(V_TNF)
venrbl <- NULL
venrbl$hl60 <- as.character(hl60_sig$ens_gene)
venrbl$atra <- as.character(atra_sig$ens_gene)
#venrbl$diff <- as.character(diff_sig$ens_gene)
str(venrbl)
V_TNF <- Venn(venrbl)
V_TNF
pdf("Venn.pdf")
plot(V_TNF)
dev.off()
View(a_AND_h_opp)
a_AND_h <- all[all$padj_a<0.05 & all$padj_h<0.05,]
a_AND_h_opp <- all[all$padj_a<0.05 & all$padj_h<0.05 & ((all$log2FoldChange_a<0 & all$log2FoldChange_h>0) | (all$log2FoldChange_h<0 & all$log2FoldChange_a>0)),]
a_AND_h_same <- all[all$padj_a<0.05 & all$padj_h<0.05 & ((all$log2FoldChange_a>1 & all$log2FoldChange_h>1) | (all$log2FoldChange_h<(-1) & all$log2FoldChange_a<(-1))),]
a_AND_h_opp <- all[all$padj_a<0.05 & all$padj_h<0.05 & ((all$log2FoldChange_a<(-1) & all$log2FoldChange_h>1) | (all$log2FoldChange_h>1 & all$log2FoldChange_a<(-1))),]
View(a_NOT_h)
View(h_NOT_a)
